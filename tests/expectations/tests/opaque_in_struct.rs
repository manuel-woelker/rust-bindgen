/* automatically generated by rust-bindgen */


#![allow(non_snake_case)]


/** <div rustbindgen opaque> */
#[repr(C)]
#[derive(Debug, Default, Copy)]
pub struct opaque {
    pub _bindgen_opaque_blob: u32,
}
#[test]
fn bindgen_test_layout_opaque() {
    assert_eq!(::std::mem::size_of::<opaque>() , 4usize);
    assert_eq! (::std::mem::align_of::<opaque>() , 4usize);
}
impl Clone for opaque {
    fn clone(&self) -> Self { *self }
}
#[repr(C)]
#[derive(Debug, Default, Copy)]
pub struct container {
    pub contained: opaque,
}
#[test]
fn bindgen_test_layout_container() {
    assert_eq!(::std::mem::size_of::<container>() , 4usize);
    assert_eq! (::std::mem::align_of::<container>() , 4usize);
    assert_eq! (unsafe {
                & ( * ( 0 as * const container ) ) . contained as * const _ as
                usize } , 0usize);
}
impl Clone for container {
    fn clone(&self) -> Self { *self }
}
